
stage cells are evolutionary steps of app development.

Each is a complete usable, polished (as good as it gets) program.
Between stages we add features set which belongs together from the technical and
usage point of view. When a proto is completed it becomes the new stable branch.
Next proto gets started by copy previous, completed one.

complete development model: /dev/goal/doc/meta/CompleteProgramming.pod 
 ## sate of the project with relation between protos types: dev/roadmap.txt
--------------------------------------------------------------------------------
       C = complete
        I = mInor Feature mIssing
         U = usable
          B = Buggy
           M = Major feature missing
            P = In Progress (currently worked on)
             N = not yet (planned)

--------------------------------------------------------------------------------
sed    C         single file editor: simplest possible editor
                 feat: read, writes files, utf safe, perl highlighting 
                                     
ded    C         doc ed: simplest way to edit more than one file
                 feat:  stashed doc obj with file_path &more attr., docbar, finnd & replace
                                     
bed         P    base ed: establish Krphra Base core structure object and type system
                 feat: doc objects, loging, event system, search bar, shell interface
--------------------------------------------------------------------------------

ged        MP    gui edit: getting all principle graphical components in order
                 feat:  UI command list, keymaps, toolbar, menus, statusbar defined by regist. commands
ved      UBMP    view: several tab bars, filebrowser, notes, direct io, EventTable.pm, LogBook.pm
ked          N   keylog: every key calls a call, own edit history
ned          N   nav edit: own find&replace, searchbar, marker, bookmarks, last edit
ced          N   comfort editing: brace&block navigation, selection, goto last edit ....
