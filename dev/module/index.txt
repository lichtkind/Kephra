Module prototypes are the place to develope libraries (internal API's).
Several connected libraries can be joined in one proto module (separated by ---).
Latest copies of all necessary libraries are copied into a proto before dev takes place.

design of the API's is done in: dev/overview
relation between different types of protos: dev/roadmap.txt
our development model in more details: doc/CompleteProgramming.pod

--------------------------------------------------------------------------------
   K ~~ Kephra                        C = Complete
   B ~~ Base                           P = Partially there, nothing missing now (or only tests)
   C ~~ Class                           S = Small feature missing
                                         U = Usable
                                          M = Major feature missing
                                           B = Buggy/old Deprecated code
                                            I = In Progress (currently worked on)
                                             N = Not yet (planned)
--------------------------------------------------------------------------------
   K::B::Package                      C         1.1    low level symbol manipulation
   K::B::Data::Type::Basic            C         1.4    inheritable single value checker
   K::B::Data::Type::Parametric       C         1.31   checks the relation of two values
   K::B::Data::Type::Store            C         1.2    collection of type objects
   K::B::Data::Type::Util             C         0.8    helper functions for type creation
   K::B::Data::Type::Standard         C         2.5    definition of standard types
   K::B::Data::Type                    P        0.71   manage type related symbols
   K::B::Data                         C         0.2    root of none OO data handling
   K::B::Closure                      C         1.1    serializable closure (code and date)
 - K::Base                            C         0.11   root package of self made language extensions
--------------------------------------------------------------------------------
   K::B::C::Definition                     BI   0.1    serializable data set to build a KBOS class from
   K::B::C::Scope                     CP        1.5    namespace constants, paths & priority logic
   K::B::C::Instance::Attribute            B N         central store for attribute ref
   K::B::C::Instance::Arguments            B N         central store for arguments ref
   K::B::C::Instance                       B N         central store 4 KBOS object ref (self)
   K::B::C::Method::Hook                   B
   K::B::C::Method::Simple                 B
   K::B::C::Method::Multi                  B
   K::B::C::Method::Accessor               B
   K::B::C::Method::Constructor            B
   K::B::C::Builder                      UMB
   K::B::C::Syntax::Parser                   N
   K::B::C::Syntax::Signature                N
 - K::B::Class                         P
--------------------------------------------------------------------------------
   K::B::C::Attribute                 C
   K::B::C::Syntax                         B
   K::B::C::Method::Signature              B
   K::B::C::Method::Argument               B
   K::B::C::Attribute::Type            P
================================================================================
 - Kephra::Base::Object
   Kephra::Base::Object::CodeSnippet
   Kephra::Base::Object::Queue
   Kephra::Base::Object::Store

   #B::Call
   #B::Call::Template
   #B::Call::Dynamic
   #B::Call::Dynamic::Template
--------------------------------------------------------------------------------
    I::Message
    I::Message::Channel
 -  I::Message::Net
--------------------------------------------------------------------------------
    I::Event
 -  I::Event::Table
--------------------------------------------------------------------------------
    I::Command
 -  I::Command::Center
--------------------------------------------------------------------------------
    App::Sizer
 -  App::Panel
--------------------------------------------------------------------------------
 -  App::Bar::Tab
