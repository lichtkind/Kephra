Module prototypes are the place to develope libraries (internal API's).
Several connected libraries can be joined in one proto.
Latest copies of all necessary libraries are copied into a proto before dev takes place.

design of the API's is done in: dev/overview
relation between different types of protos: dev/roadmap.txt
our development model in more details: doc/CompleteProgramming.pod

--------------------------------------------------------------------------------
                             C = Complete
                              P = Partially there, nothing missing now
                               S = Small feature missing
                                U = Usable
                                 M = Major feature missing
                                  B = Buggy/old Deprecated code
                                   I = In Progress (currently worked on)
                                    N = Not yet (planned)
--------------------------------------------------------------------------------
   Kephra::Base::Package                    C              low level symbol manipulation
   Kephra::Base::Data::Type::Simple         C              inheritable absolute value checker
   Kephra::Base::Data::Type::Parametric         MB I       contracts between several values
   Kephra::Base::Data::Type                     MB         standard types
   Kephra::Base::Data                       C
   Kephra::Base::Call                       C
 - Kephra::Base                             C
--------------------------------------------------------------------------------
   Kephra::Base::Class::Scope               C
   Kephra::Base::Class::Attribute::Type      P
   Kephra::Base::Class::Attribute           C
   Kephra::Base::Class::Definition              MD
   Kephra::Base::Class::Instance               UMD
   Kephra::Base::Class::Method::Argument         D
   Kephra::Base::Class::Method::Signature        D
   Kephra::Base::Class::Method::Hook             D
   Kephra::Base::Class::Method                   D
   Kephra::Base::Class::Builder                UMD
   Kephra::Base::Class::Syntax                   D
 - Kephra::Base::Class                       P
--------------------------------------------------------------------------------
================================================================================
 - Kephra::Base::Object
   Kephra::Base::Object::CodeSnippet
   Kephra::Base::Object::Queue
   Kephra::Base::Object::Store

   #B::Call
   #B::Call::Template
   #B::Call::Dynamic
   #B::Call::Dynamic::Template
--------------------------------------------------------------------------------
    I::Message
    I::Message::Channel
 -  I::Message::Net
--------------------------------------------------------------------------------
    I::Event
 -  I::Event::Table
--------------------------------------------------------------------------------
    I::Command
 -  I::Command::Center
--------------------------------------------------------------------------------
    App::Sizer
 -  App::Panel
--------------------------------------------------------------------------------
 -  App::Bar::Tab
